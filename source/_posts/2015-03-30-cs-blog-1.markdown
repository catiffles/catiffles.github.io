---
layout: post
title: "CS Blog 1"
date: 2015-03-30 21:15:41 -0400
comments: true
categories:
---

  After studying web developement for a little over two months, we delved into some CS fundamentals for the first time. Below are my notes on some topics we looked at today.

  A queue and a stack are classes which describe which element is affected first/which action happens first. For example, the queue is FIFO (first in first out). We can use this to decide which task to finish first when given a large list of tasks(like at work). Stacks are completely opposite and follow LIFO (last in first out). An example we would use this is to find our way out of a maze by backtracking since a stack is a recursive data structure.

  Arrays, associative arrays, and sets are different ways to hold elements. The difference in these are the way they are organized.

  An array lists elements in consecutive blocks of memory which can be called by the index of the element. In order to search through an array, one would have to go through each element until they found the element they were looking for. This causes a search time of O(N).

  An associated array can contain an array of arrays, splitting up the data to make it more accessible. The data is sorted into different categories in the associated array, and makes looking up a certain element much easier. For example, instead of looking through all your clothes for a blue shirt, you go directly to your shirt rack and only look through your shirts. This allows for an O(N/k) lookup time, which may seem to be the same as O(N) since k is a constant, but with a lot of data, this can improve time significantly.

  A set can be seen like a Venn diagram. We can use sets when we have elements that have different attributes, with some shared attributes. For example, blogs with categories. Blogs can have different categories that also belong to other blogs, but not always share the same category. The differences between a set and an array are elements can be associated with multiple sets, sets are not indexed or ordered, and duplicate values cannot exist within a set.

  More tomorrow!
